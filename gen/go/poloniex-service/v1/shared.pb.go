// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: poloniex-service/v1/shared.proto

package poloniex_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionStatus int32

const (
	SubscriptionStatus_SUBSCRIPTION_STATUS_UNSPECIFIED          SubscriptionStatus = 0
	SubscriptionStatus_SUBSCRIPTION_STATUS_FAILED               SubscriptionStatus = 1
	SubscriptionStatus_SUBSCRIPTION_STATUS_ALREADY_SUBSCRIPTION SubscriptionStatus = 2
	SubscriptionStatus_SUBSCRIPTION_STATUS_BAD_REQUEST          SubscriptionStatus = 3
)

// Enum value maps for SubscriptionStatus.
var (
	SubscriptionStatus_name = map[int32]string{
		0: "SUBSCRIPTION_STATUS_UNSPECIFIED",
		1: "SUBSCRIPTION_STATUS_FAILED",
		2: "SUBSCRIPTION_STATUS_ALREADY_SUBSCRIPTION",
		3: "SUBSCRIPTION_STATUS_BAD_REQUEST",
	}
	SubscriptionStatus_value = map[string]int32{
		"SUBSCRIPTION_STATUS_UNSPECIFIED":          0,
		"SUBSCRIPTION_STATUS_FAILED":               1,
		"SUBSCRIPTION_STATUS_ALREADY_SUBSCRIPTION": 2,
		"SUBSCRIPTION_STATUS_BAD_REQUEST":          3,
	}
)

func (x SubscriptionStatus) Enum() *SubscriptionStatus {
	p := new(SubscriptionStatus)
	*p = x
	return p
}

func (x SubscriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_poloniex_service_v1_shared_proto_enumTypes[0].Descriptor()
}

func (SubscriptionStatus) Type() protoreflect.EnumType {
	return &file_poloniex_service_v1_shared_proto_enumTypes[0]
}

func (x SubscriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionStatus.Descriptor instead.
func (SubscriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_poloniex_service_v1_shared_proto_rawDescGZIP(), []int{0}
}

type RecentTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`              // ID транзакции
	Pair      string                 `protobuf:"bytes,2,opt,name=Pair,proto3" json:"Pair,omitempty"`           // Торговая пара
	Price     float64                `protobuf:"fixed64,3,opt,name=Price,proto3" json:"Price,omitempty"`       // Цена транзакции
	Amount    float64                `protobuf:"fixed64,4,opt,name=Amount,proto3" json:"Amount,omitempty"`     // Объём транзакции в базовой валюте
	Side      string                 `protobuf:"bytes,5,opt,name=Side,proto3" json:"Side,omitempty"`           // Как биржа засчитала эту сделку (как buy или как sell )
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"` // Время транзакции
}

func (x *RecentTrade) Reset() {
	*x = RecentTrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poloniex_service_v1_shared_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentTrade) ProtoMessage() {}

func (x *RecentTrade) ProtoReflect() protoreflect.Message {
	mi := &file_poloniex_service_v1_shared_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentTrade.ProtoReflect.Descriptor instead.
func (*RecentTrade) Descriptor() ([]byte, []int) {
	return file_poloniex_service_v1_shared_proto_rawDescGZIP(), []int{0}
}

func (x *RecentTrade) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecentTrade) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *RecentTrade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *RecentTrade) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RecentTrade) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *RecentTrade) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Kline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair       string                 `protobuf:"bytes,1,opt,name=Pair,proto3" json:"Pair,omitempty"`               // Торговая пара
	O          float64                `protobuf:"fixed64,2,opt,name=O,proto3" json:"O,omitempty"`                   // Open - цена открытия
	H          float64                `protobuf:"fixed64,3,opt,name=H,proto3" json:"H,omitempty"`                   // High - максимальная цена
	L          float64                `protobuf:"fixed64,4,opt,name=L,proto3" json:"L,omitempty"`                   // Low - минимальная цена
	C          float64                `protobuf:"fixed64,5,opt,name=C,proto3" json:"C,omitempty"`                   // Close - цена закрытия
	Volume     *Volume                `protobuf:"bytes,6,opt,name=Volume,proto3" json:"Volume,omitempty"`           // Объём торгов
	Timeframe  string                 `protobuf:"bytes,7,opt,name=Timeframe,proto3" json:"Timeframe,omitempty"`     // Интервал формирования свечки
	TsFrom     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=TsFrom,proto3" json:"TsFrom,omitempty"`           // Время начала формирования свечки
	TsTo       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=TsTo,proto3" json:"TsTo,omitempty"`               // Время окончания формирования свечки
	TradeCount int64                  `protobuf:"varint,10,opt,name=TradeCount,proto3" json:"TradeCount,omitempty"` // Количество трейдов
	Ts         int64                  `protobuf:"varint,11,opt,name=Ts,proto3" json:"Ts,omitempty"`                 // Время когда запись началась
}

func (x *Kline) Reset() {
	*x = Kline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poloniex_service_v1_shared_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kline) ProtoMessage() {}

func (x *Kline) ProtoReflect() protoreflect.Message {
	mi := &file_poloniex_service_v1_shared_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kline.ProtoReflect.Descriptor instead.
func (*Kline) Descriptor() ([]byte, []int) {
	return file_poloniex_service_v1_shared_proto_rawDescGZIP(), []int{1}
}

func (x *Kline) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Kline) GetO() float64 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *Kline) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *Kline) GetL() float64 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *Kline) GetC() float64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *Kline) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Kline) GetTimeframe() string {
	if x != nil {
		return x.Timeframe
	}
	return ""
}

func (x *Kline) GetTsFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.TsFrom
	}
	return nil
}

func (x *Kline) GetTsTo() *timestamppb.Timestamp {
	if x != nil {
		return x.TsTo
	}
	return nil
}

func (x *Kline) GetTradeCount() int64 {
	if x != nil {
		return x.TradeCount
	}
	return 0
}

func (x *Kline) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyBase   float64 `protobuf:"fixed64,1,opt,name=BuyBase,proto3" json:"BuyBase,omitempty"`     // Объём покупок в базовой валюте
	SellBase  float64 `protobuf:"fixed64,2,opt,name=SellBase,proto3" json:"SellBase,omitempty"`   // Объём продаж в базовой валюте
	BuyQuote  float64 `protobuf:"fixed64,3,opt,name=BuyQuote,proto3" json:"BuyQuote,omitempty"`   // Объём покупок в котируемой валюте
	SellQuote float64 `protobuf:"fixed64,4,opt,name=SellQuote,proto3" json:"SellQuote,omitempty"` // Объём продаж в котируемой валюте
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poloniex_service_v1_shared_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_poloniex_service_v1_shared_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_poloniex_service_v1_shared_proto_rawDescGZIP(), []int{2}
}

func (x *Volume) GetBuyBase() float64 {
	if x != nil {
		return x.BuyBase
	}
	return 0
}

func (x *Volume) GetSellBase() float64 {
	if x != nil {
		return x.SellBase
	}
	return 0
}

func (x *Volume) GetBuyQuote() float64 {
	if x != nil {
		return x.BuyQuote
	}
	return 0
}

func (x *Volume) GetSellQuote() float64 {
	if x != nil {
		return x.SellQuote
	}
	return 0
}

var File_poloniex_service_v1_shared_proto protoreflect.FileDescriptor

var file_poloniex_service_v1_shared_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x65, 0x78, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x70, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xad, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x69, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0xb2, 0x02, 0x0a, 0x05, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0c,
	0x0a, 0x01, 0x4f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x4f, 0x12, 0x0c, 0x0a, 0x01,
	0x48, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x48, 0x12, 0x0c, 0x0a, 0x01, 0x4c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x4c, 0x12, 0x0c, 0x0a, 0x01, 0x43, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x43, 0x12, 0x2b, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x06, 0x54, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x73, 0x54, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x54, 0x73, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x54, 0x73, 0x22, 0x78, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x42, 0x75, 0x79, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c,
	0x6c, 0x42, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x53, 0x65, 0x6c,
	0x6c, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x75, 0x79, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x42, 0x75, 0x79, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x2a,
	0xac, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x55, 0x42,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x65, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6f, 0x6c, 0x6f, 0x6e, 0x69, 0x65, 0x78, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_poloniex_service_v1_shared_proto_rawDescOnce sync.Once
	file_poloniex_service_v1_shared_proto_rawDescData = file_poloniex_service_v1_shared_proto_rawDesc
)

func file_poloniex_service_v1_shared_proto_rawDescGZIP() []byte {
	file_poloniex_service_v1_shared_proto_rawDescOnce.Do(func() {
		file_poloniex_service_v1_shared_proto_rawDescData = protoimpl.X.CompressGZIP(file_poloniex_service_v1_shared_proto_rawDescData)
	})
	return file_poloniex_service_v1_shared_proto_rawDescData
}

var file_poloniex_service_v1_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_poloniex_service_v1_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_poloniex_service_v1_shared_proto_goTypes = []interface{}{
	(SubscriptionStatus)(0),       // 0: poloniex.v1.SubscriptionStatus
	(*RecentTrade)(nil),           // 1: poloniex.v1.RecentTrade
	(*Kline)(nil),                 // 2: poloniex.v1.Kline
	(*Volume)(nil),                // 3: poloniex.v1.Volume
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_poloniex_service_v1_shared_proto_depIdxs = []int32{
	4, // 0: poloniex.v1.RecentTrade.Timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: poloniex.v1.Kline.Volume:type_name -> poloniex.v1.Volume
	4, // 2: poloniex.v1.Kline.TsFrom:type_name -> google.protobuf.Timestamp
	4, // 3: poloniex.v1.Kline.TsTo:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_poloniex_service_v1_shared_proto_init() }
func file_poloniex_service_v1_shared_proto_init() {
	if File_poloniex_service_v1_shared_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_poloniex_service_v1_shared_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentTrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poloniex_service_v1_shared_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poloniex_service_v1_shared_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poloniex_service_v1_shared_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_poloniex_service_v1_shared_proto_goTypes,
		DependencyIndexes: file_poloniex_service_v1_shared_proto_depIdxs,
		EnumInfos:         file_poloniex_service_v1_shared_proto_enumTypes,
		MessageInfos:      file_poloniex_service_v1_shared_proto_msgTypes,
	}.Build()
	File_poloniex_service_v1_shared_proto = out.File
	file_poloniex_service_v1_shared_proto_rawDesc = nil
	file_poloniex_service_v1_shared_proto_goTypes = nil
	file_poloniex_service_v1_shared_proto_depIdxs = nil
}
